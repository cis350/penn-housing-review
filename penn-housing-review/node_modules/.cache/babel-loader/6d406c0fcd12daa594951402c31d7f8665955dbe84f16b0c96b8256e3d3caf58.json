{"ast":null,"code":"var _jsxFileName = \"/Users/jie/Desktop/penn-housing/penn-housing-review/src/components/MainSearch2.js\",\n  _s = $RefreshSig$();\n/*// Import React and useState hook\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo2.png\"\n\n// Define a custom component for the logo and title\nfunction LogoTitle() {\n  return (\n    <div className=\"logo-title\">\n      <img src={logo} />\n      <h1 className=\"main-title\">Penn Housing Review</h1>\n    </div>\n  );\n}\n\n// Define a custom component for the search box and results\nfunction Search() {\n  // Define a state variable to store the keyword entered by the user\n  const [keyword, setKeyword] = useState(\"\");\n\n  // Define a state variable to store the results fetched from the API\n  const [results, setResults] = useState([]);\n\n  // Define a function that handles the change event of the input element\n  const handleChange = (event) => {\n    // Get the value of the input element\n    const value = event.target.value;\n\n    // Update the keyword state variable with the value\n    setKeyword(value);\n\n    // If the value is not empty, call the API to get the results\n    if (value) {\n      fetch(`/posts/search?keyword=${value}&limit=4`)\n        .then((response) => response.json())\n        .then((data) => {\n          // Update the results state variable with the data\n          setResults(data);\n        })\n        .catch((error) => {\n          // Handle any error from the API call\n          console.error(error);\n        });\n    } else {\n      // If the value is empty, clear the results state variable\n      setResults([]);\n    }\n  };\n\n  return (\n    <div className=\"search-box\">\n      <input\n        className=\"search\"\n        type=\"text\"\n        placeholder=\"Search for a place...\"\n        value={keyword}\n        onChange={handleChange}\n      />\n      <ul className=\"search-results\">\n        {results.map((result) => (\n          <li key={result.id}>{result.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n// Define a custom component for the main body of the page\nfunction MainBody() {\n  return (\n    <div className=\"main-body\">\n      <LogoTitle />\n      <Search />\n    </div>\n  );\n}\n\nexport default MainBody;*/\n\n// Import React and useState hook\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo2.png\";\n\n// Import the searchHouse function from another file\nimport { searchHouse } from \"../api/MainSearchApi.js\";\nimport './Main.css';\n\n// Define a custom component for the logo and title\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogoTitle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logo-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Penn Housing Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n// Define a custom component for the search box and results\n_c = LogoTitle;\nfunction Search() {\n  _s();\n  // Define a state variable to store the keyword entered by the user\n  const [keyword, setKeyword] = useState(\"\");\n\n  // Define a state variable to store the results fetched from the API\n  const [results, setResults] = useState([]);\n\n  // Define a function that handles the change event of the input element\n  const handleChange = async event => {\n    // Get the value of the input element\n    const value = event.target.value;\n\n    // Update the keyword state variable with the value\n    setKeyword(value);\n\n    // If the value is not empty, call the searchHouse function to get the results\n    if (value) {\n      try {\n        // Await for the promise returned by searchHouse to resolve with data\n        const data = await searchHouse(value, 4);\n        // Update the results state variable with data\n        setResults(data);\n        console.log(data);\n      } catch (error) {\n        // Handle any error from searchHouse function call\n        console.error(error);\n      }\n    } else {\n      // If value is empty, clear results state variable \n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      type: \"text\",\n      placeholder: \"Search for a place...\",\n      value: keyword,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"search-results\",\n      children: [results.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \" + add a house\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n// Define a custom component for main body of page \n_s(Search, \"t1m0bVHgjgHfsulg40yGmirGob0=\");\n_c2 = Search;\nfunction MainBody() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-body\",\n    children: [/*#__PURE__*/_jsxDEV(LogoTitle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_c3 = MainBody;\nexport default MainBody;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LogoTitle\");\n$RefreshReg$(_c2, \"Search\");\n$RefreshReg$(_c3, \"MainBody\");","map":{"version":3,"names":["React","useState","logo","searchHouse","jsxDEV","_jsxDEV","LogoTitle","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","Search","_s","keyword","setKeyword","results","setResults","handleChange","event","value","target","data","console","log","error","type","placeholder","onChange","map","name","_c2","MainBody","_c3","$RefreshReg$"],"sources":["/Users/jie/Desktop/penn-housing/penn-housing-review/src/components/MainSearch2.js"],"sourcesContent":["/*// Import React and useState hook\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo2.png\"\n\n// Define a custom component for the logo and title\nfunction LogoTitle() {\n  return (\n    <div className=\"logo-title\">\n      <img src={logo} />\n      <h1 className=\"main-title\">Penn Housing Review</h1>\n    </div>\n  );\n}\n\n// Define a custom component for the search box and results\nfunction Search() {\n  // Define a state variable to store the keyword entered by the user\n  const [keyword, setKeyword] = useState(\"\");\n\n  // Define a state variable to store the results fetched from the API\n  const [results, setResults] = useState([]);\n\n  // Define a function that handles the change event of the input element\n  const handleChange = (event) => {\n    // Get the value of the input element\n    const value = event.target.value;\n\n    // Update the keyword state variable with the value\n    setKeyword(value);\n\n    // If the value is not empty, call the API to get the results\n    if (value) {\n      fetch(`/posts/search?keyword=${value}&limit=4`)\n        .then((response) => response.json())\n        .then((data) => {\n          // Update the results state variable with the data\n          setResults(data);\n        })\n        .catch((error) => {\n          // Handle any error from the API call\n          console.error(error);\n        });\n    } else {\n      // If the value is empty, clear the results state variable\n      setResults([]);\n    }\n  };\n\n  return (\n    <div className=\"search-box\">\n      <input\n        className=\"search\"\n        type=\"text\"\n        placeholder=\"Search for a place...\"\n        value={keyword}\n        onChange={handleChange}\n      />\n      <ul className=\"search-results\">\n        {results.map((result) => (\n          <li key={result.id}>{result.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n// Define a custom component for the main body of the page\nfunction MainBody() {\n  return (\n    <div className=\"main-body\">\n      <LogoTitle />\n      <Search />\n    </div>\n  );\n}\n\nexport default MainBody;*/\n\n// Import React and useState hook\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo2.png\"\n\n\n// Import the searchHouse function from another file\nimport { searchHouse } from \"../api/MainSearchApi.js\";\n\nimport './Main.css'\n\n// Define a custom component for the logo and title\nfunction LogoTitle() {\n  return (\n    <div className=\"logo-title\">\n      <img src={logo} />\n      <h1 className=\"main-title\">Penn Housing Review</h1>\n    </div>\n  );\n}\n\n// Define a custom component for the search box and results\nfunction Search() {\n  // Define a state variable to store the keyword entered by the user\n  const [keyword, setKeyword] = useState(\"\");\n\n  // Define a state variable to store the results fetched from the API\n  const [results, setResults] = useState([]);\n\n  // Define a function that handles the change event of the input element\n  const handleChange = async (event) => {\n    // Get the value of the input element\n    const value = event.target.value;\n\n    // Update the keyword state variable with the value\n    setKeyword(value);\n\n    // If the value is not empty, call the searchHouse function to get the results\n    if (value) {\n      try {\n        // Await for the promise returned by searchHouse to resolve with data\n        const data = await searchHouse(value, 4);\n        // Update the results state variable with data\n        setResults(data);\n        console.log (data);\n      } catch (error) {\n        // Handle any error from searchHouse function call\n        console.error(error);\n      }\n    } else {\n      // If value is empty, clear results state variable \n      setResults([]);\n    }\n  };\n\n  return (\n    <div className=\"search-box\">\n      <input\n        className=\"search\"\n        type=\"text\"\n        placeholder=\"Search for a place...\"\n        value={keyword}\n        onChange={handleChange}\n      />\n      <ul className=\"search-results\">\n        {results.map((name) => (\n            <li>{name}</li>\n        ))}\n        <li> + add a house</li>\n      </ul>\n    </div>\n  );\n}\n\n// Define a custom component for main body of page \nfunction MainBody() {\n  return (\n    <div className=\"main-body\">\n      <LogoTitle />\n      <Search />\n    </div>\n  );\n}\n\nexport default MainBody;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,qBAAqB;;AAGtC;AACA,SAASC,WAAW,QAAQ,yBAAyB;AAErD,OAAO,YAAY;;AAEnB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAAA,EAAG;EACnB,oBACED,OAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBH,OAAA;MAAKI,GAAG,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClBR,OAAA;MAAIE,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/C;AAEV;;AAEA;AAAAC,EAAA,GATSR,SAAS;AAUlB,SAASS,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMoB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC;IACA,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;;IAEhC;IACAL,UAAU,CAACK,KAAK,CAAC;;IAEjB;IACA,IAAIA,KAAK,EAAE;MACT,IAAI;QACF;QACA,MAAME,IAAI,GAAG,MAAMtB,WAAW,CAACoB,KAAK,EAAE,CAAC,CAAC;QACxC;QACAH,UAAU,CAACK,IAAI,CAAC;QAChBC,OAAO,CAACC,GAAG,CAAEF,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACd;QACAF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC,MAAM;MACL;MACAR,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEf,OAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBH,OAAA;MACEE,SAAS,EAAC,QAAQ;MAClBsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCP,KAAK,EAAEN,OAAQ;MACfc,QAAQ,EAAEV;IAAa;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eACFR,OAAA;MAAIE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAC3BW,OAAO,CAACa,GAAG,CAAEC,IAAI,iBACd5B,OAAA;QAAAG,QAAA,EAAKyB;MAAI;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ,CAAC,eACFR,OAAA;QAAAG,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;;AAEA;AAAAG,EAAA,CApDSD,MAAM;AAAAmB,GAAA,GAANnB,MAAM;AAqDf,SAASoB,QAAQA,CAAA,EAAG;EAClB,oBACE9B,OAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBH,OAAA,CAACC,SAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACbR,OAAA,CAACU,MAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV;AAACuB,GAAA,GAPQD,QAAQ;AASjB,eAAeA,QAAQ;AAAC,IAAArB,EAAA,EAAAoB,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}