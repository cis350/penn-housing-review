{"ast":null,"code":"var _jsxFileName = \"/Users/jie/Desktop/penn-housing/penn-housing-review/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport loginUser from \"../api/LoginAPI.js\";\nimport InputBox from \"./InputBox.js\";\nimport registerUser from \"../api/RegistrationAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // will modify user ID once logged in\n  // state variables for username and password input\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isRegister, setIsRegister] = useState(false); // if is register, displays a larger box\n\n  // handle change events for input fields\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  // handle click events for buttons\n  const handleRegisterClick = async () => {\n    if (!isRegister) {\n      // logic for registering a new user\n      console.log(\"Registering user\");\n      setIsRegister(true);\n    } else {\n      // Try to log in the user with the given credentials\n      try {\n        // Await for the loginUser function to resolve or reject\n        const data = await registerUser(username, email, password);\n        console.log(data);\n        // If resolved, get the userID from the data object\n        const userID = data.data.id;\n        console.log(userID);\n        loggedIn(username, userID);\n      } catch (error) {\n        // If rejected, handle the error by displaying a message or logging it\n        alert('Registration failed. Please check your username and password.');\n        console.error(error);\n      }\n    }\n  };\n\n  // handle click events for buttons\n  const handleBackClick = () => {\n    // logic for registering a new user\n    console.log(\"Going back to login\");\n    setIsRegister(false);\n  };\n\n  /*\n  const handleLoginClick = async () => {\n    // logic for logging in an existing user\n    console.log(\"Logging in user:\", username);\n    loginUserResponse = await loginUser(username, password);\n  };*/\n\n  async function handleLoginClick() {\n    // Try to log in the user with the given credentials\n    try {\n      // Await for the loginUser function to resolve or reject\n      const data = await loginUser(username, password);\n      console.log(data);\n      // If resolved, get the userID from the data object\n      const userID = data.data.id;\n      console.log(userID);\n      loggedIn(username, userID);\n    } catch (error) {\n      // If rejected, handle the error by displaying a message or logging it\n      alert('Login failed. Please check your username and password.');\n      console.error(error);\n    }\n  }\n  function loggedIn(username, userID) {\n    // then send it to main page\n    alert(\"logged in!\");\n    // Do something with the userID, such as storing it in localStorage or redirecting to another page\n    localStorage.setItem('userID', userID);\n    localStorage.setItem('username', username);\n    window.location.href = '/search';\n  }\n  if (isRegister) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-popup-title\",\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n          id: \"username\",\n          val: username,\n          text: \"Username: \",\n          handleVal: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n          id: \"email\",\n          val: email,\n          text: \"Email: \",\n          handleVal: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n          id: \"password\",\n          val: password,\n          text: \"Password: \",\n          handleVal: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBackClick,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRegisterClick,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-popup-title\",\n        children: \"Login to Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n        id: \"username\",\n        val: username,\n        text: \"Username: \",\n        handleVal: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n        id: \"password\",\n        val: password,\n        text: \"Password: \",\n        handleVal: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterClick,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginClick,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"vr8UB9u0FIoezaOyAOXKun888BQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","loginUser","InputBox","registerUser","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","email","setEmail","isRegister","setIsRegister","handleUsernameChange","event","target","value","handlePasswordChange","handleEmailChange","handleRegisterClick","console","log","data","userID","id","loggedIn","error","alert","handleBackClick","handleLoginClick","localStorage","setItem","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","val","text","handleVal","onClick","_c","$RefreshReg$"],"sources":["/Users/jie/Desktop/penn-housing/penn-housing-review/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport loginUser from \"../api/LoginAPI.js\";\nimport InputBox from \"./InputBox.js\";\nimport registerUser from \"../api/RegistrationAPI.js\";\n\nfunction Login() { // will modify user ID once logged in\n  // state variables for username and password input\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isRegister, setIsRegister] = useState(false); // if is register, displays a larger box\n\n  // handle change events for input fields\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  // handle click events for buttons\n  const handleRegisterClick = async () => {\n    if (!isRegister){\n      // logic for registering a new user\n      console.log(\"Registering user\");\n      setIsRegister(true);\n    } else {\n      // Try to log in the user with the given credentials\n    try {\n      // Await for the loginUser function to resolve or reject\n      const data = await registerUser(username, email, password);\n      console.log(data);\n      // If resolved, get the userID from the data object\n      const userID = data.data.id;\n      console.log(userID);\n      loggedIn(username, userID);\n    } catch (error) {\n      // If rejected, handle the error by displaying a message or logging it\n      alert('Registration failed. Please check your username and password.');\n      console.error(error);\n    }\n    }\n  };\n\n  // handle click events for buttons\n  const handleBackClick = () => {\n    // logic for registering a new user\n    console.log(\"Going back to login\");\n    setIsRegister(false);\n  };\n\n  /*\n  const handleLoginClick = async () => {\n    // logic for logging in an existing user\n    console.log(\"Logging in user:\", username);\n    loginUserResponse = await loginUser(username, password);\n  };*/\n\n  async function handleLoginClick() {\n    // Try to log in the user with the given credentials\n    try {\n      // Await for the loginUser function to resolve or reject\n      const data = await loginUser(username, password);\n      console.log(data);\n      // If resolved, get the userID from the data object\n      const userID = data.data.id;\n      console.log(userID);\n      loggedIn(username, userID);\n    } catch (error) {\n      // If rejected, handle the error by displaying a message or logging it\n      alert('Login failed. Please check your username and password.');\n      console.error(error);\n    }\n  }\n\n  function loggedIn(username, userID) {\n    // then send it to main page\n    alert(\"logged in!\");\n    // Do something with the userID, such as storing it in localStorage or redirecting to another page\n    localStorage.setItem('userID', userID);\n    localStorage.setItem('username', username);\n\n    window.location.href = '/search';\n  }\n\n  if (isRegister) {\n    \n    return (\n      <div className=\"login-container\">\n        {/* semi-transparent background overlay */}\n        <div className=\"login-overlay\"></div>\n        <div className=\"login-form\">\n          <h1 className=\"login-popup-title\">Create an Account</h1>\n          <InputBox id = \"username\" val = {username} text = \"Username: \" handleVal = {handleUsernameChange}/>\n          <InputBox id = \"email\" val = {email} text = \"Email: \" handleVal = {handleEmailChange}/>        \n          <InputBox id = \"password\" val = {password} text = \"Password: \" handleVal = {handlePasswordChange}/>        \n          <div className=\"login-buttons\">\n            <button onClick={handleBackClick}>Back</button>\n            <button onClick={handleRegisterClick}>Register</button>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n\n  return (\n    <div className=\"login-container\">\n      {/* semi-transparent background overlay */}\n      <div className=\"login-overlay\"></div>\n      <div className=\"login-form\">\n        <h1 className=\"login-popup-title\">Login to Continue</h1>\n        <InputBox id = \"username\" val = {username} text = \"Username: \" handleVal = {handleUsernameChange}/>\n        <InputBox id = \"password\" val = {password} text = \"Password: \" handleVal = {handlePasswordChange}/>        \n        <div className=\"login-buttons\">\n          <button onClick={handleRegisterClick}>Register</button>\n          <button onClick={handleLoginClick}>Login</button>\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}