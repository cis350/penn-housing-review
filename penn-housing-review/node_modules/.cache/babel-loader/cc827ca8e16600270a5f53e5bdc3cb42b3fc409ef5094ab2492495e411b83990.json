{"ast":null,"code":"import axios from 'axios';\nimport { rootURL } from \"../utils/utils\";\n\n// use try catch to handle error\nexport const getAllPosts = async () => {\n  try {\n    const res = await axios.get(`${rootURL}/posts`);\n    // console.log(\"get all posts\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getFilteredPost = async (category, housingType) => {\n  try {\n    const url = `${rootURL}/posts?category=${category}&housingType=${housingType}`;\n    const res = await axios.get(url);\n    // console.log(\"get filtered posts\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getFilteredPostByCategory = async category => {\n  try {\n    const url = `${rootURL}/posts?category=${category}`;\n    const res = await axios.get(url);\n    // console.log(\"get filtered posts by category\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getFilteredPostByHousingType = async housingType => {\n  try {\n    const url = `${rootURL}/posts?housingType=${housingType}`;\n    const res = await axios.get(url);\n    // console.log(\"get filtered posts by housing type\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const updateLike = async (likes, pid) => {\n  try {\n    const response = await axios.put(`${rootURL}/posts/${pid}`, {\n      likes: likes\n    });\n    // console.log(\"update likes\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getOnePost = async postId => {\n  try {\n    const res = await axios.get(`${rootURL}/posts?pid=${postId}`);\n    // console.log(\"get one thread\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};","map":{"version":3,"names":["axios","rootURL","getAllPosts","res","get","data","err","console","error","message","getFilteredPost","category","housingType","url","getFilteredPostByCategory","getFilteredPostByHousingType","updateLike","likes","pid","response","put","getOnePost","postId"],"sources":["/Users/jie/Desktop/penn-housing/penn-housing-review/src/api/FBMainAPI.js"],"sourcesContent":["import axios from 'axios';\nimport { rootURL } from \"../utils/utils\";\n\n// use try catch to handle error\nexport const getAllPosts = async () => {\n    try {\n        const res = await axios.get(`${rootURL}/posts`);\n        // console.log(\"get all posts\", res.data);\n        return res.data;\n\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getFilteredPost = async (category, housingType) => {\n    try {\n        const url = `${rootURL}/posts?category=${category}&housingType=${housingType}`;\n        const res = await axios.get(url);\n        // console.log(\"get filtered posts\", res.data);\n        return res.data;\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getFilteredPostByCategory = async (category) => {\n    try {\n        const url = `${rootURL}/posts?category=${category}`;\n        const res = await axios.get(url);\n        // console.log(\"get filtered posts by category\", res.data);\n        return res.data;\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getFilteredPostByHousingType = async (housingType) => {\n    try {\n        const url = `${rootURL}/posts?housingType=${housingType}`;\n        const res = await axios.get(url);\n        // console.log(\"get filtered posts by housing type\", res.data);\n        return res.data;\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const updateLike = async(likes, pid) => {\n    try {\n        const response = await axios.put(`${rootURL}/posts/${pid}`, {\n            likes: likes\n        });\n        // console.log(\"update likes\", response.data);\n        return response.data;\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getOnePost = async (postId) => {\n    try {\n        const res = await axios.get(`${rootURL}/posts?pid=${postId}`);\n        // console.log(\"get one thread\", res.data);\n        return res.data;\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }   \n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,gBAAgB;;AAExC;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,QAAO,CAAC;IAC/C;IACA,OAAOE,GAAG,CAACE,IAAI;EAEnB,CAAC,CACD,OAAOC,GAAG,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,WAAW,KAAK;EAC5D,IAAI;IACA,MAAMC,GAAG,GAAI,GAAEZ,OAAQ,mBAAkBU,QAAS,gBAAeC,WAAY,EAAC;IAC9E,MAAMT,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACS,GAAG,CAAC;IAChC;IACA,OAAOV,GAAG,CAACE,IAAI;EACnB,CAAC,CACD,OAAOC,GAAG,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMK,yBAAyB,GAAG,MAAOH,QAAQ,IAAK;EACzD,IAAI;IACA,MAAME,GAAG,GAAI,GAAEZ,OAAQ,mBAAkBU,QAAS,EAAC;IACnD,MAAMR,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACS,GAAG,CAAC;IAChC;IACA,OAAOV,GAAG,CAACE,IAAI;EACnB,CAAC,CACD,OAAOC,GAAG,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMM,4BAA4B,GAAG,MAAOH,WAAW,IAAK;EAC/D,IAAI;IACA,MAAMC,GAAG,GAAI,GAAEZ,OAAQ,sBAAqBW,WAAY,EAAC;IACzD,MAAMT,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACS,GAAG,CAAC;IAChC;IACA,OAAOV,GAAG,CAACE,IAAI;EACnB,CAAC,CACD,OAAOC,GAAG,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAMC,KAAK,EAAEC,GAAG,KAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,GAAEnB,OAAQ,UAASiB,GAAI,EAAC,EAAE;MACxDD,KAAK,EAAEA;IACX,CAAC,CAAC;IACF;IACA,OAAOE,QAAQ,CAACd,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMY,UAAU,GAAG,MAAOC,MAAM,IAAK;EACxC,IAAI;IACA,MAAMnB,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,cAAaqB,MAAO,EAAC,CAAC;IAC7D;IACA,OAAOnB,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEF,GAAG,CAACG,OAAO,CAAC;EACvC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}