{"ast":null,"code":"import axios from \"axios\";\nasync function loginUser(username, password) {\n  // Create an object with username and password properties\n  const data = {\n    username: username,\n    password: password\n  };\n  try {\n    const response = await axios.post('http://localhost:3500/' + 'login', data);\n    return response;\n  } catch (err) {\n    console.log(err);\n    throw new Error(\"login failed\");\n  }\n\n  /*\n  // Return a promise that resolves with the response data or rejects with an error\n  return axios.post('/login', data)\n    .then(response => response.data)\n    .catch(error => {\n      // Handle different error scenarios\n      if (error.response) {\n        // The request was made and the server responded with a status code that falls out of the range of 2xx\n        console.error('Error status', error.response.status);\n        console.error('Error data', error.response.data);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('No response', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error message', error.message);\n      }\n      // Reject the promise with the error object\n      return Promise.reject(error);\n    });*/\n}\n\nexport default loginUser;","map":{"version":3,"names":["axios","loginUser","username","password","data","response","post","err","console","log","Error"],"sources":["/Users/xinyuanfan/Documents/UPenn/Academics/2023-Sophomore-Spring/CIS3500/penn-housing-review/penn-housing-review/src/api/LoginAPI.js"],"sourcesContent":["import axios from \"axios\";\n\nasync function loginUser(username, password) {\n    // Create an object with username and password properties\n    const data = {\n      username: username,\n      password: password\n    };\n\n    try {\n\n    const response = await axios.post('http://localhost:3500/' + 'login', data);\n    return response;\n\n    } catch (err) {\n      console.log(err);\n      throw new Error(\"login failed\");\n    }\n\n\n    /*\n    // Return a promise that resolves with the response data or rejects with an error\n    return axios.post('/login', data)\n      .then(response => response.data)\n      .catch(error => {\n        // Handle different error scenarios\n        if (error.response) {\n          // The request was made and the server responded with a status code that falls out of the range of 2xx\n          console.error('Error status', error.response.status);\n          console.error('Error data', error.response.data);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.error('No response', error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.error('Error message', error.message);\n        }\n        // Reject the promise with the error object\n        return Promise.reject(error);\n      });*/\n  }\n\n  export default loginUser;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAeC,SAASA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACzC;EACA,MAAMC,IAAI,GAAG;IACXF,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACZ,CAAC;EAED,IAAI;IAEJ,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,wBAAwB,GAAG,OAAO,EAAEF,IAAI,CAAC;IAC3E,OAAOC,QAAQ;EAEf,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,MAAM,IAAIG,KAAK,CAAC,cAAc,CAAC;EACjC;;EAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAEA,eAAeT,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}