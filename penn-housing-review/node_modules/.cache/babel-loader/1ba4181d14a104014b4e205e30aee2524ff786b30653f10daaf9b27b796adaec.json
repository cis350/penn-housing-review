{"ast":null,"code":"import axios from 'axios';\nimport { rootURL } from \"../utils/utils\";\n\n// use try catch to handle error\nexport const getAllPosts = async () => {\n  try {\n    const res = await axios.get(`${rootURL}/posts`);\n    // console.log(\"get all posts\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getFilteredPost = async (category, housingType) => {\n  try {\n    const url = `${rootURL}/posts?category=${category}&housingType=${housingType}`;\n    const res = await axios.get(url);\n    // console.log(\"get filtered posts\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getFilteredPostByCategory = async category => {\n  try {\n    const url = `${rootURL}/posts?category=${category}`;\n    const res = await axios.get(url);\n    // console.log(\"get filtered posts by category\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getFilteredPostByHousingType = async housingType => {\n  try {\n    const url = `${rootURL}/posts?housingType=${housingType}`;\n    const res = await axios.get(url);\n    // console.log(\"get filtered posts by housing type\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const updatePostLike = async (updateLikes, pid) => {\n  try {\n    const response = await axios.put(`${rootURL}/posts?pid=${pid}`, {\n      likes: updateLikes\n    });\n    console.log(\"update likes\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const updateCommentLike = async (updateLikes, cid) => {\n  try {\n    const response = await axios.put(`${rootURL}/comments?cid=${cid}`, `likes=${updateLikes}`);\n    console.log(\"update likes\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const getAllCommentsByPostId = async pid => {\n  try {\n    const res = await axios.get(`${rootURL}/comments?pid=${pid}`);\n    // console.log(\"get all comments by post id\", res.data);\n    return res.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const createComment = async (pid, content) => {\n  try {\n    const response = await axios.post(`${rootURL}/comments`, {\n      pid: pid,\n      content: content,\n      likes: 0\n    });\n    console.log(\"create comment\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const updateCommentLength = async (pid, commentLength) => {\n  try {\n    const response = await axios.put(`${rootURL}/posts?id=${pid}`, {\n      comments: commentLength\n    });\n    console.log(\"update comment length\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};\nexport const addNewPost = async (title, content, category, housingType, uid, user) => {\n  try {\n    const response = await axios.post(`${rootURL}/new_posts`, {\n      uid: uid,\n      user: user,\n      title: title,\n      content: content,\n      category: category,\n      housingType: housingType,\n      comments: 0,\n      likes: 0\n    });\n    // console.log(\"add new post\", response.data);\n    return response.data;\n  } catch (err) {\n    console.error(\"error\", err.message);\n  }\n};","map":{"version":3,"names":["axios","rootURL","getAllPosts","res","get","data","err","console","error","message","getFilteredPost","category","housingType","url","getFilteredPostByCategory","getFilteredPostByHousingType","updatePostLike","updateLikes","pid","response","put","likes","log","updateCommentLike","cid","getAllCommentsByPostId","createComment","content","post","updateCommentLength","commentLength","comments","addNewPost","title","uid","user"],"sources":["/Users/jie/Desktop/penn-housing/penn-housing-review/src/api/FBMainAPI.js"],"sourcesContent":["import axios from 'axios';\nimport { rootURL } from \"../utils/utils\";\n\n// use try catch to handle error\nexport const getAllPosts = async () => {\n    try {\n        const res = await axios.get(`${rootURL}/posts`);\n        // console.log(\"get all posts\", res.data);\n        return res.data;\n\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getFilteredPost = async (category, housingType) => {\n    try {\n        const url = `${rootURL}/posts?category=${category}&housingType=${housingType}`;\n        const res = await axios.get(url);\n        // console.log(\"get filtered posts\", res.data);\n        return res.data;\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getFilteredPostByCategory = async (category) => {\n    try {\n        const url = `${rootURL}/posts?category=${category}`;\n        const res = await axios.get(url);\n        // console.log(\"get filtered posts by category\", res.data);\n        return res.data;\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getFilteredPostByHousingType = async (housingType) => {\n    try {\n        const url = `${rootURL}/posts?housingType=${housingType}`;\n        const res = await axios.get(url);\n        // console.log(\"get filtered posts by housing type\", res.data);\n        return res.data;\n    }\n    catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const updatePostLike = async(updateLikes, pid) => {\n    try {\n        const response = await axios.put(`${rootURL}/posts?pid=${pid}`, {\n            likes: updateLikes\n        });\n        console.log(\"update likes\", response.data);\n        return response.data;\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const updateCommentLike = async(updateLikes, cid) => {\n    try {\n        const response = await axios.put(`${rootURL}/comments?cid=${cid}`, `likes=${updateLikes}`);\n        console.log(\"update likes\", response.data);\n        return response.data;\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const getAllCommentsByPostId = async (pid) => {\n    try {\n        const res = await axios.get(`${rootURL}/comments?pid=${pid}`);\n        // console.log(\"get all comments by post id\", res.data);\n        return res.data;\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const createComment = async (pid, content) => {\n    try {\n        const response = await axios.post(`${rootURL}/comments`, {\n            pid: pid,\n            content: content,\n            likes: 0,\n        });\n        console.log(\"create comment\", response.data);\n        return response.data;\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const updateCommentLength = async (pid, commentLength) => {\n    try {\n        const response = await axios.put(`${rootURL}/posts?id=${pid}`, {\n            comments: commentLength\n        });\n        console.log(\"update comment length\", response.data);\n        return response.data;\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n\nexport const addNewPost = async (title, content, category, housingType, uid, user) => {\n    try {\n        const response = await axios.post(`${rootURL}/new_posts`,{\n            uid: uid,\n            user: user,\n            title: title,\n            content: content,\n            category: category,\n            housingType: housingType,\n            comments: 0,\n            likes: 0,\n        });\n        // console.log(\"add new post\", response.data);\n        return response.data\n    } catch (err) {\n        console.error(\"error\", err.message);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}